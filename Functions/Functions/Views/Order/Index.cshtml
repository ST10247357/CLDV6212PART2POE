@model IEnumerable<Functions.Models.Order>

@{
    ViewData["Title"] = "Orders";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3">Orders</h1>
    <a asp-action="Create" class="btn btn-dark me-2">Create New</a>
</div>

<table class="table table-striped table-hover align-middle">
    <thead class="table-dark">
        <tr>
            <th>Full Name</th>
            <th>Email</th>
            <th>Product</th>
            <th>Quantity</th>
            <th>Unit Price</th>
            <th>Total Price</th>
            <th>Order Date</th>
            <th>Status</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                <td>@Html.DisplayFor(modelItem => item.CustomerEmail)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                <td>@Html.DisplayFor(modelItem => item.UnitPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.TotalPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                <td>
                    @{
                        // Dummy status logic - you can replace this with actual status from your model
                        var status = "Pending";
                        var statusClass = "warning";

                        // Example logic for dummy status based on order date or other properties
                        if (item.OrderDate < DateTime.Now.AddDays(-7))
                        {
                            status = "Completed";
                            statusClass = "success";
                        }
                        else if (item.OrderDate < DateTime.Now.AddDays(-1))
                        {
                            status = "Processing";
                            statusClass = "info";
                        }
                        else if (item.Quantity > 10)
                        {
                            status = "On Hold";
                            statusClass = "secondary";
                        }
                    }
                    <span class="badge bg-@statusClass">@status</span>
                </td>
                <td class="text-center">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="actionsMenu_@item.RowKey" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-three-dots-vertical"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="actionsMenu_@item.RowKey">
                            <li>
                                <a class="dropdown-item" asp-action="Edit" asp-route-partitionKey="@item.PartitionKey" asp-route-rowKey="@item.RowKey">
                                    Edit
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item text-danger" asp-action="Delete" asp-route-partitionKey="@item.PartitionKey" asp-route-rowKey="@item.RowKey">
                                    Delete
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-action="Details" asp-route-partitionKey="@item.PartitionKey" asp-route-rowKey="@item.RowKey">
                                    Details
                                </a>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">